// src/pages/admin/Statistics.jsx
import React, { useState, useEffect } from 'react';
import AdminService from '../../services/admin.service';
import AdminLayout from '../../components/admin/AdminLayout';
import styles from '../../assets/css/AdminStatistics.module.css';
import { Line, Bar, Doughnut, Pie } from 'react-chartjs-2';
import {
    Chart as ChartJS,
    CategoryScale,
    LinearScale,
    PointElement,
    LineElement,
    BarElement,
    ArcElement,
    Title,
    Tooltip,
    Legend,
} from 'chart.js';

// Register ChartJS components
ChartJS.register(
    CategoryScale,
    LinearScale,
    PointElement,
    LineElement,
    BarElement,
    ArcElement,
    Title,
    Tooltip,
    Legend
);

const Statistics = () => {
    const [userStats, setUserStats] = useState(null);
    const [postStats, setPostStats] = useState(null);
    const [activityStats, setActivityStats] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [period, setPeriod] = useState('month'); // 'week', 'month', 'year'
    const [activeTab, setActiveTab] = useState('users'); // 'users', 'posts', 'activity'

    useEffect(() => {
        const fetchStats = async () => {
            setLoading(true);
            setError(null);

            try {
                const [userStatsResponse, postStatsResponse, activityStatsResponse] = await Promise.all([
                    AdminService.getUserStats(period),
                    AdminService.getPostStats(period),
                    AdminService.getActivityStats(period)
                ]);

                setUserStats(userStatsResponse.data.data);
                setPostStats(postStatsResponse.data.data);
                setActivityStats(activityStatsResponse.data.data);
            } catch (error) {
                console.error('Error fetching statistics:', error);
                setError('Failed to load statistics. Please try again later.');
            } finally {
                setLoading(false);
            }
        };

        fetchStats();
    }, [period]);

    // Dummy data for demonstration (replace with real data from API)
    const userChartData = {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
        datasets: [
            {
                label: 'New Users',
                data: [65, 59, 80, 81, 56, 55, 40, 65, 59, 80, 81, 56],
                fill: false,
                borderColor: 'rgb(75, 192, 192)',
                tension: 0.1
            },
            {
                label: 'Active Users',
                data: [28, 48, 40, 19, 86, 27, 90, 65, 59, 80, 81, 56],
                fill: false,
                borderColor: 'rgb(153, 102, 255)',
                tension: 0.1
            }
        ]
    };

    const postChartData = {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
        datasets: [
            {
                label: 'New Posts',
                data: [28, 48, 40, 19, 86, 27, 90, 65, 59, 80, 81, 56],
                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                borderColor: 'rgb(54, 162, 235)',
                borderWidth: 1
            }
        ]
    };

    const activityChartData = {
        labels: ['Likes', 'Comments', 'Shares', 'Saves', 'Profile Views'],
        datasets: [
            {
                label: 'User Activity',
                data: [300, 150, 100, 75, 200],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.5)',
                    'rgba(54, 162, 235, 0.5)',
                    'rgba(255, 206, 86, 0.5)',
                    'rgba(75, 192, 192, 0.5)',
                    'rgba(153, 102, 255, 0.5)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)'
                ],
                borderWidth: 1
            }
        ]
    };

    const userPieData = {
        labels: ['Mobile', 'Desktop', 'Tablet'],
        datasets: [
            {
                label: 'Platform Usage',
                data: [60, 30, 10],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.5)',
                    'rgba(54, 162, 235, 0.5)',
                    'rgba(255, 206, 86, 0.5)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)'
                ],
                borderWidth: 1
            }
        ]
    };

    const handlePeriodChange = (e) => {
        setPeriod(e.target.value);
    };

    const handleTabChange = (tab) => {
        setActiveTab(tab);
    };

    if (loading) {
        return (
            <AdminLayout>
                <div className={styles.loadingContainer}>
                    <div className={styles.spinner}></div>
                    <p>Loading statistics...</p>
                </div>
            </AdminLayout>
        );
    }

    if (error) {
        return (
            <AdminLayout>
                <div className={styles.errorContainer}>
                    <p className={styles.errorMessage}>{error}</p>
                    <button
                        className={styles.retryButton}
                        onClick={() => window.location.reload()}
                    >
                        Retry
                    </button>
                </div>
            </AdminLayout>
        );
    }

    const renderUserStats = () => (
        <div className={styles.statsSection}>
            <div className={styles.statsRow}>
                <div className={styles.statCard}>
                    <h3>Total Users</h3>
                    <p className={styles.statValue}>1,245</p>
                    <p className={`${styles.statChange} ${styles.positive}`}>+12.5% from last period</p>
                </div>
                
                <div className={styles.statCard}>
                    <h3>New Users</h3>
                    <p className={styles.statValue}>328</p>
                    <p className={`${styles.statChange} ${styles.positive}`}>+8.2% from last period</p>
                </div>
                
                <div className={styles.statCard}>
                    <h3>Active Users</h3>
                    <p className={styles.statValue}>892</p>
                    <p className={`${styles.statChange} ${styles.positive}`}>+15.7% from last period</p>
                </div>
                
                <div className={styles.statCard}>
                    <h3>Churned Users</h3>
                    <p className={styles.statValue}>45</p>
                    <p className={`${styles.statChange} ${styles.negative}`}>-3.2% from last period</p>
                </div>
            </div>

            <div className={styles.chartsRow}>
                <div className={styles.chartCard}>
                    <h3>User Growth</h3>
                    <div className={styles.chart}>
                        <Line data={userChartData} />
                    </div>
                </div>
                
                <div className={styles.chartCard}>
                    <h3>Platform Usage</h3>
                    <div className={styles.chart}>
                        <Pie data={userPieData} />
                    </div>
                </div>
            </div>

            <div className={styles.analyticsTable}>
                <h3>User Demographics</h3>
                <table>
                    <thead>
                        <tr>
                            <th>Age Group</th>
                            <th>Percentage</th>
                            <th>Growth</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>18-24</td>
                            <td>35%</td>
                            <td className={styles.positive}>+8.2%</td>
                        </tr>
                        <tr>
                            <td>25-34</td>
                            <td>42%</td>
                            <td className={styles.positive}>+12.5%</td>
                        </tr>
                        <tr>
                            <td>35-44</td>
                            <td>15%</td>
                            <td className={styles.positive}>+4.3%</td>
                        </tr>
                        <tr>
                            <td>45+</td>
                            <td>8%</td>
                            <td className={styles.positive}>+2.1%</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    );

    const renderPostStats = () => (
        <div className={styles.statsSection}>
            <div className={styles.statsRow}>
                <div className={styles.statCard}>
                    <h3>Total Posts</h3>
                    <p className={styles.statValue}>8,732</p>
                    <p className={`${styles.statChange} ${styles.positive}`}>+8.2% from last period</p>
                </div>
                
                <div className={styles.statCard}>
                    <h3>New Posts</h3>
                    <p className={styles.statValue}>1,245</p>
                    <p className={`${styles.statChange} ${styles.positive}`}>+12.5% from last period</p>
                </div>
                
                <div className={styles.statCard}>
                    <h3>Average Engagement</h3>
                    <p className={styles.statValue}>45.3%</p>
                    <p className={`${styles.statChange} ${styles.positive}`}>+15.7% from last period</p>
                </div>
                
                <div className={styles.statCard}>
                    <h3>Reported Posts</h3>
                    <p className={styles.statValue}>23</p>
                    <p className={`${styles.statChange} ${styles.negative}`}>-3.2% from last period</p>
                </div>
            </div>

            <div className={styles.chartsRow}>
                <div className={styles.chartCard}>
                    <h3>Post Creation</h3>
                    <div className={styles.chart}>
                        <Bar data={postChartData} />
                    </div>
                </div>
                
                <div className={styles.chartCard}>
                    <h3>Content Types</h3>
                    <div className={styles.chart}>
                        <Pie 
                            data={{
                                labels: ['Images', 'Videos', 'Text', 'Multi-Image', 'Other'],
                                datasets: [{
                                    data: [45, 30, 10, 12, 3],
                                    backgroundColor: [
                                        'rgba(255, 99, 132, 0.5)',
                                        'rgba(54, 162, 235, 0.5)',
                                        'rgba(255, 206, 86, 0.5)',
                                        'rgba(75, 192, 192, 0.5)',
                                        'rgba(153, 102, 255, 0.5)'
                                    ]
                                }]
                            }}
                        />
                    </div>
                </div>
            </div>

            <div className={styles.analyticsTable}>
                <h3>Top Performing Posts</h3>
                <table>
                    <thead>
                        <tr>
                            <th>Post ID</th>
                            <th>Author</th>
                            <th>Likes</th>
                            <th>Comments</th>
                            <th>Engagement</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>#4821</td>
                            <td>user123</td>
                            <td>2,145</td>
                            <td>342</td>
                            <td className={styles.positive}>32.5%</td>
                        </tr>
                        <tr>
                            <td>#3921</td>
                            <td>influencer_7</td>
                            <td>1,856</td>
                            <td>287</td>
                            <td className={styles.positive}>28.7%</td>
                        </tr>
                        <tr>
                            <td>#5329</td>
                            <td>jane_doe</td>
                            <td>1,723</td>
                            <td>215</td>
                            <td className={styles.positive}>24.2%</td>
                        </tr>
                        <tr>
                            <td>#4289</td>
                            <td>photo_expert</td>
                            <td>1,689</td>
                            <td>198</td>
                            <td className={styles.positive}>23.8%</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    );

    const renderActivityStats = () => (
        <div className={styles.statsSection}>
            <div className={styles.statsRow}>
                <div className={styles.statCard}>
                    <h3>Total Likes</h3>
                    <p className={styles.statValue}>45,289</p>
                    <p className={`${styles.statChange} ${styles.positive}`}>+15.7% from last period</p>
                </div>
                
                <div className={styles.statCard}>
                    <h3>Total Comments</h3>
                    <p className={styles.statValue}>12,456</p>
                    <p className={`${styles.statChange} ${styles.negative}`}>-3.2% from last period</p>
                </div>
                
                <div className={styles.statCard}>
                    <h3>Total Shares</h3>
                    <p className={styles.statValue}>8,723</p>
                    <p className={`${styles.statChange} ${styles.positive}`}>+5.8% from last period</p>
                </div>
                
                <div className={styles.statCard}>
                    <h3>Avg. Session</h3>
                    <p className={styles.statValue}>18m 24s</p>
                    <p className={`${styles.statChange} ${styles.positive}`}>+2.1% from last period</p>
                </div>
            </div>

            <div className={styles.chartsRow}>
                <div className={styles.chartCard}>
                    <h3>User Activity</h3>
                    <div className={styles.chart}>
                        <Doughnut data={activityChartData} />
                    </div>
                </div>
                
                <div className={styles.chartCard}>
                    <h3>Activity Trends</h3>
                    <div className={styles.chart}>
                        <Line 
                            data={{
                                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                                datasets: [
                                    {
                                        label: 'Likes',
                                        data: [3200, 3500, 4100, 3800, 4300, 4800, 5100, 5400, 5800, 6100, 6500, 7000],
                                        borderColor: 'rgba(255, 99, 132, 1)',
                                        fill: false,
                                    },
                                    {
                                        label: 'Comments',
                                        data: [1200, 1300, 1400, 1350, 1500, 1550, 1600, 1650, 1700, 1750, 1800, 1900],
                                        borderColor: 'rgba(54, 162, 235, 1)',
                                        fill: false,
                                    },
                                    {
                                        label: 'Shares',
                                        data: [600, 650, 700, 750, 800, 850, 900, 950, 1000, 1050, 1100, 1150],
                                        borderColor: 'rgba(255, 206, 86, 1)',
                                        fill: false,
                                    }
                                ]
                            }}
                        />
                    </div>
                </div>
            </div>

            <div className={styles.analyticsTable}>
                <h3>User Engagement</h3>
                <table>
                    <thead>
                        <tr>
                            <th>Metric</th>
                            <th>Value</th>
                            <th>Change</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Daily Active Users</td>
                            <td>892</td>
                            <td className={styles.positive}>+12.5%</td>
                        </tr>
                        <tr>
                            <td>Posts per User</td>
                            <td>4.2</td>
                            <td className={styles.positive}>+8.2%</td>
                        </tr>
                        <tr>
                            <td>Likes per Post</td>
                            <td>18.7</td>
                            <td className={styles.positive}>+15.7%</td>
                        </tr>
                        <tr>
                            <td>Comments per Post</td>
                            <td>3.2</td>
                            <td className={styles.negative}>-3.2%</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    );

    return (
        <AdminLayout>
            <div className={styles.statisticsContainer}>
                <div className={styles.header}>
                    <h1>Statistics and Analytics</h1>
                    
                    <div className={styles.periodSelector}>
                        <label htmlFor="period">Time Period:</label>
                        <select 
                            id="period" 
                            value={period} 
                            onChange={handlePeriodChange}
                            className={styles.periodSelect}
                        >
                            <option value="week">Last Week</option>
                            <option value="month">Last Month</option>
                            <option value="year">Last Year</option>
                        </select>
                    </div>
                </div>
                
                <div className={styles.tabs}>
                    <button 
                        className={`${styles.tabButton} ${activeTab === 'users' ? styles.active : ''}`}
                        onClick={() => handleTabChange('users')}
                    >
                        User Statistics
                    </button>
                    <button 
                        className={`${styles.tabButton} ${activeTab === 'posts' ? styles.active : ''}`}
                        onClick={() => handleTabChange('posts')}
                    >
                        Post Statistics
                    </button>
                    <button 
                        className={`${styles.tabButton} ${activeTab === 'activity' ? styles.active : ''}`}
                        onClick={() => handleTabChange('activity')}
                    >
                        Activity Analysis
                    </button>
                </div>
                
                <div className={styles.tabContent}>
                    {activeTab === 'users' && renderUserStats()}
                    {activeTab === 'posts' && renderPostStats()}
                    {activeTab === 'activity' && renderActivityStats()}
                </div>
            </div>
        </AdminLayout>
    );
};

export default Statistics;
