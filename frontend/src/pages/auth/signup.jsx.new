import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import styles from '../../assets/css/signup.module.css';

const SignUp = () => {
    const [formData, setFormData] = useState({
        emailOrPhone: '',
        fullName: '',
        username: '',
        password: ''
    });
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState('');
    const [success, setSuccess] = useState('');

    const navigate = useNavigate();

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData(prevState => ({
            ...prevState,
            [name]: value
        }));
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setLoading(true);
        setError('');
        setSuccess('');

        // Basic validation
        if (!formData.emailOrPhone || !formData.fullName || !formData.username || !formData.password) {
            setError('Vui lòng điền đầy đủ thông tin');
            setLoading(false);
            return;
        }

        if (formData.password.length < 6) {
            setError('Mật khẩu phải có ít nhất 6 ký tự');
            setLoading(false);
            return;
        }

        try {
            // TODO: Replace with actual API call
            // Example API call structure:
            // const response = await fetch('/api/auth/signup', {
            //     method: 'POST',
            //     headers: {
            //         'Content-Type': 'application/json',
            //     },
            //     body: JSON.stringify({
            //         email: formData.emailOrPhone,
            //         fullName: formData.fullName,
            //         username: formData.username,
            //         password: formData.password
            //     })
            // });
            
            // Simulate API call
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            setSuccess('Đăng ký thành công! Chuyển hướng đến trang đăng nhập...');
            
            // Redirect to login after 2 seconds
            setTimeout(() => {
                navigate('/login');
            }, 2000);
            
        } catch (err) {
            setError('Đã xảy ra lỗi khi đăng ký. Vui lòng thử lại.');
        }
        
        setLoading(false);
    };

    // Handle button click directly when using it outside a form
    const handleSignupClick = () => {
        // Manually trigger form submission
        document.getElementById('signupForm').dispatchEvent(
            new Event('submit', { cancelable: true, bubbles: true })
        );
    };

    return (
        <div className={styles.container}>
            <div className={styles.part1}>
                <h1 className={styles.title}>Insta</h1>
                <p className={styles.subtitle}>
                    Đăng ký để xem ảnh và video từ<br />
                    bạn bè.
                </p>
                
                <div className={styles.orDivider}>
                    <span>Hoặc</span>
                </div>
                
                <form id="signupForm" className={styles.form} onSubmit={handleSubmit}>
                    <input
                        type="text"
                        name="emailOrPhone"
                        className={styles.formInput}
                        placeholder="Số di động hoặc email"
                        value={formData.emailOrPhone}
                        onChange={handleChange}
                    />
                    
                    <input
                        type="text"
                        name="fullName"
                        className={styles.formInput}
                        placeholder="Tên đầy đủ"
                        value={formData.fullName}
                        onChange={handleChange}
                    />
                    
                    <input
                        type="text"
                        name="username"
                        className={styles.formInput}
                        placeholder="Tên người dùng"
                        value={formData.username}
                        onChange={handleChange}
                    />
                    
                    <input
                        type="password"
                        name="password"
                        className={styles.formInput}
                        placeholder="Mật khẩu"
                        value={formData.password}
                        onChange={handleChange}
                    />
                    
                    <button 
                        type="submit" 
                        className={styles.dangki}
                        disabled={loading}
                        onClick={handleSignupClick}
                    >
                        {loading ? 'Đang đăng ký...' : 'Đăng ký'}
                    </button>
                </form>
                
                {error && <div className={styles.errorMessage}>{error}</div>}
                {success && <div className={styles.successMessage}>{success}</div>}
                
                <p className={styles.termsText}>
                    Bằng cách đăng ký, bạn đồng ý với Điều khoản,<br />
                    Chính sách dữ liệu và Chính sách cookie của<br />
                    chúng tôi.
                </p>
            </div>
            
            <div className={styles.part2}>
                <p>
                    Bạn có tài khoản? {' '}
                    <Link to="/login" className={styles.dangnhap}>
                        Đăng nhập
                    </Link>
                </p>
            </div>
        </div>
    );
};

export default SignUp;
